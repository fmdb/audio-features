name: Build application

on:
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    needs: version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Create PyInstaller Spec if needed
        run: |
          if [ ! -f audio_features.spec ]; then
            python -m PyInstaller --name=fmdb_audio_features --onefile audio_features/app.py
          fi
        shell: bash

      - name: Build Binary
        run: |
          if [ -f audio_features.spec ]; then
            pyinstaller audio_features.spec
          else
            pyinstaller --name=fmdb_audio_features --onefile audio_features/app.py
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-fmdb_audio_features
          path: dist/fmdb_audio_features*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-fmdb_audio_features
          path: dist/linux

      - name: Download MacOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-fmdb_audio_features
          path: dist/macos

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-fmdb_audio_features
          path: dist/windows

      - name: List Artifacts
        run: |
          ls -R dist/
        shell: bash

      - uses: "actions/setup-node@v4"
        with:
          node-version: 'lts/*'

      - name: "Run semantic-release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install --save-dev semantic-release
          npx semantic-release